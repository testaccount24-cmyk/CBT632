
v 1.0                                         May 21st, 2003


                       Table of Contents

     DISCLAIMER
1    COPYRIGHT

2    BASE 64 ENCODER ! TOBASE64 UTILITY
2.1  JES Job Log Message Output
2.2  Return Codes
2.3  JCL to run the TOBASE64  Data Conversion Program

3    TOASCII ! EBCDIC to ASCII Conversion
3.1  JES Job Log Message Output
3.2  Return Codes
3.3  JCL to run the TOASCII   Data Conversion Program

4    TOASCILF ! EBCDIC to ASCII Conversion - With CRLF Added
4.1  JES Job Log Message Output                                 2
4.2  Return Codes                                               3
4.3  JCL to run the TOASCILF  Data Conversion Program           3

5    Putting it all together - Sample e-mail job

DISCLAIMER

    No warranties are supplied or implied.  No claims for
    damage or loss incurred by use of these programs will
    be accepted.  No warranty is made to the accuracy of
    the programs and related material and no responsibility
    is assumed for any modification directly or indirectly
    caused by the use of this software.  It is the user's
    responsibility to evaluate the usefulness of the
    material supplied.  We do not guarantee to keep any
    material provided up to date, nor do we guarantee to
    provide any corrections or extensions NO WARRANTY,
    EXPRESSED OR IMPLIED, IS PROVIDED BY ANY OR ALL OF THE
    PERSONS AND/OR INSTITUTIONS EDITING, DUPLICATING, OR
    OTHERWISE HANDLING THE SUPPLIED PROGRAMS AND RELATED
    MATERIAL.  PERSONS AND/OR INSTITUTIONS USING ANY OF THE
    SUPPLIED PROGRAMS OR MATERIALS, DO SO ENTIRELY AT THEIR
    OWN RISK.  Use of these programs and/or related
    materials indicates acceptance of these terms.

1  Copyright

You are authorised to use these programs, subject to the
disclaimer notice above. You may not pass these programs on to
others. You may not sell the programs in either source or object
form, either separately or as part of a package. You can modify
the programs to suit the needs of your installation, but this is
done at your own risk and we are not obliged to help you to do so.

2  BASE 64 Encoder ! TOBASE64 Utility

TOBASE64 is a user written program whose purpose is to read data
from the file pointed to by the SYSUT1 DD statement and, treating
it as a continuous bit stream, encode it as a BASE64 data stream.
The  resultant encoded data is written to the file pointed to by
the  SYSUT2 DD statement. The required DD statements for the
input and output files follow:

DD Name Description of file contents

SYSUT1  Input file containing data which the user wishes to
        convert to BASE64 prior to e-mailing from the mainframe
        using SMTP.  Usually the file will be in ASCII for
        transferring to a PC based platform.  The following input
        characteristics are allowed:

               Physical sequential
RECFM=VB(A) maximum lrecl=1028 (ie. user data length=1024)
RECFM=FB(A) maximum lrecl=1024

SYSUT2  Output file contains the data from SYSUT1 encoded in BASE
        64. The "safe 64" characters are in EBCDIC - since the
        mainframe SMTP processing does the EBCDIC to ASCII
        conversion.

2.1  JES Job Log Message Output

During program execution, messages pertaining to the characteristics
of the input file are displayed.  If the file is neither fixed not
variable the run will terminate with return code 16.  Also if the
LRECL is too big the run will terminate with return code 16.

A normally completed run will have return code 0 (zero) and the
job log will look similar to the following example:

  Display  Filter  View  Print  Options  Help
-----------------------------------------------------------------------------
SDSF OUTPUT DISPLAY JDAGPC$D JOB04716 DSID 2 LINE 0 COLUMNS 02- 81
COMMAND INPUT ===>                                     SCROLL ===> CSR
******************************* TOP OF DATA **********************************

                 J E S 2  J O B  L O G  --  S Y S T E M  S Y S K  --  N O D E
09.58.49 JOB04716 ---- TUESDAY,   10 OCT 2000 ----
09.58.49 JOB04716  IRR010I  USERID JDAGPC   IS ASSIGNED TO THIS JOB.
09.58.50 JOB04716  ICH70001I JDAGPC   LAST ACCESS AT 09:50:23 ON TUESDAY, OCT
09.58.50 JOB04716  $HASP373 JDAGPC$D STARTED - INIT 20   - CLASS T - SYS SYSK
09.58.50 JOB04716  SMF021I JDAGPC$D WITH ACCOUNT CODE=DB
09.58.50 JOB04716  IEF403I JDAGPC$D - STARTED - TIME=09.58.50
09.58.51 JOB04716  +** Opening SYSUT1       **
09.58.51 JOB04716  +** input LRECL = 000240 **
09.58.51 JOB04716  +** RECFM = variable     **
09.58.52 JOB04716  +** Issuing CLOSEs       **
09.58.58 JOB04716  MVS0010I JDAGPC$D 00.284 T          SIZE19A  ** R0000 **
09.59.00 JOB04716  IEF404I JDAGPC$D - ENDED - TIME=09.59.00


If the job stops with return code 16, then an appropriate error
message will be displayed after the  +** input LRECL = 000240 **
message.

2.2  Return Codes

Ret Code  Significance

0   Normal return code ! the file SYSUT1 has been converted to
    the file SYSUT2

16  Input file characteristics were not acceptable for one of the
    following reasons:

    **   RECFM = unknown       **
    **   LRECL more than 1028  **   _for a RECFM=VB file
    **   LRECL more than 1024  **   _for a RECFM=FB file


2.3  JCL to run the TOBASE64  Data Conversion Program

//*        BASE 64 ENCODING
//TOBASE64 EXEC  PGM=TOBASE64
//STEPLIB  DD    DSN=JIS.DEV.UTILBAT.LOADLIB,DISP=SHR
//SYSUT1   DD    DSN=JDAGPC.LOG.MISC,DISP=SHR   VB 255 - Input
//SYSUT2   DD    DSN=JDAGPC.LOG.BASE64,DISP=SHR FB 80 - Output



3    TOASCII ! EBCDIC to ASCII Conversion

TOASCII is a user written program whose purpose is to read data
from the file pointed to by the SYSUT1 DD statement and write each
record to the file pointed to by the SYSUT2 DD statement - after it
has been converted to ASCII.

DD Name Description of file contents

SYSUT1  Input file containing data which the user wishes to
        convert to ASCII. The following input characteristics
        are allowed:

               Physical sequential
RECFM=VB(A) maximum lrecl=1028 (ie. user data length=1024)
RECFM=FB(A) maximum lrecl=1024

SYSUT2  Output file contains the data from SYSUT1 encoded in ASCII.

3.1  JES Job Log Message Output

Similar to TOBASE64.

If the job stops with return code 16, then an appropriate error
message will be displayed after the  +** input LRECL = 000240 **
message.

3.2  Return Codes

Ret Code  Significance

0   Normal return code ! the file SYSUT1 has been converted to
    the file SYSUT2

16  Input file characteristics were not acceptable for one of the
    following reasons:

    **   RECFM = unknown       **
    **   LRECL more than 1028  **   _for a RECFM=VB file
    **   LRECL more than 1024  **   _for a RECFM=FB file


3.3  JCL to run the TOASCII  Data Conversion Program

//*        EBCDIC to ASCII Data Conversion
//TOASCII  EXEC  PGM=TOASCII
//STEPLIB  DD    DSN=YOURHLQ.LOADLIB,DISP=SHR
//SYSUT1   DD    DSN=LOG.MISC,DISP=SHR   VB 255 - Input
//SYSUT2   DD    DSN=LOG.BASE64,DISP=SHR FB 80 - Output


4    TOASCILF ! EBCDIC to ASCII Conversion - With CRLF Added

TOASCILF is a user written program whose purpose is to read data
from the file pointed to by the SYSUT1 DD statement and convert
it to ASCII. In so doing it adds a <CR><LF> to the end of each
record in the file pointed to by the SYSUT2 DD statement.

If you are sending HTML outside the mainframe environment you would
normally send it as straight ASCII and not worry about where lines
start and end - since HTML viewers "eat" the white space and follow
the HTML formatting commands.

If you are sending formatted data as straight "text" - for example a
source program file or structured data - then you might want to
preserve "new lines" in the new environment. This is accomplished
by adding a "carriage return + line feed" to the end of each line
- that is the <CR><LF> characters. Use TOASCILF instead of TOASCII.

The required DD statements for the input and output files follow:

DD Name Description of file contents

SYSUT1  Input file containing data which the user wishes to
        convert to ASCII.

               Physical sequential
RECFM=VB(A) maximum lrecl=1026 (ie. user data length=1022)
RECFM=FB(A) maximum lrecl=1022

SYSUT2  Output file contains the data from SYSUT1 converted to ASCII
        with the ASCII <CR><LF> characters added. Each record (LRECL)
        is 2 bytes larger than the equivalent record in the SYSUT1 file.

4.1  JES Job Log Message Output

Similar to TOBASE64.

If the job stops with return code 16, then an appropriate error
message will be displayed after the  +** input LRECL = 000240 **
message.

4.2  Return Codes

Ret Code  Significance

0   Normal return code ! the file SYSUT1 has been converted to
    the file SYSUT2

16  Input file characteristics were not acceptable for one of the
    following reasons:

    **   RECFM = unknown       **
    **   LRECL more than 1028  **   _for a RECFM=VB file
    **   LRECL more than 1024  **   _for a RECFM=FB file


4.3  JCL to run the TOASCILF  Data Conversion Program

//*        EBCDIC to ASCII WIth <CR><LF> Appended
//TOASCILF EXEC  PGM=TOASCILF
//STEPLIB  DD    DSN=YOURHLQ.LOADLIB,DISP=SHR
//SYSUT1   DD    DSN=LOG.MISC,DISP=SHR   VB 255 - Input
//SYSUT2   DD    DSN=LOG.ASCILF,DISP=SHR FB 80 - Output



5    Putting it all together - Sample e-mail job

Let's say we've just created a mainframe report - wrappered it with HTML
and have it sitting in a file on DASD. We now want to e-mail it as an
attachment. FILE632 contains all the utilities that you will need to
achieve this. TOASCII will convert the EBCDIC data to ASCII, then
TOBASE64 will convert this to the "safe 64" character set for
inclusion as a MIME attachment. Finally - IEBGENER is used to send
the file as an attachment, using the JES SMTP writer.

The following sample job stream to accomplish all of this is in
FILE632(EMAILXMP) - that job stream is listed below. Pay particular
attention to the "Content-type" line - which has very important data
in columns 73-80 - it identifies the string that defines the MIME
attachment boundaries:

//USERID$1 JOB  (ACCOUNT),'EMAIL TEST',MSGCLASS=Y,CLASS=X,
//        MSGLEVEL=(1,1)
//*
//*====================================================================
//* Job to send an email via SMTP, including an encoded attachment   *
//*==================================================================*
//*
//** Convert the attachment to ASCII
//*
//ASCII    EXEC PGM=TOASCII
//STEPLIB  DD   DSN=YOURHLQ.LOADLIB,DISP=SHR
//SYSUT1   DD   DISP=SHR,DSN=REPORT.TOBE.EMAILED
//SYSUT2   DD   DSN=&&ASCII,DISP=(,PASS),UNIT=SYSDA,
//              SPACE=(TRK,(5,5),RLSE)
//*
//** Encode the attachment using the ENBASE64 Rexx exec
//*
//B64      EXEC PGM=TOBASE64
//STEPLIB  DD   DSN=YOURHLQ.LOADLIB,DISP=SHR
//SYSUT1   DD   DISP=SHR,DSN=&&ASCII
//SYSUT2   DD   DSN=&&BASE64,DISP=(,PASS),UNIT=SYSDA,
//              DCB=(LRECL=80,BLKSIZE=0,RECFM=FB),
//              SPACE=(CYL,(5,1),RLSE)
//*
//** Send the e-mail with attachment
//*
//SENDNOTE EXEC PGM=IEBGENER
//SYSIN    DD DUMMY
//SYSPRINT DD SYSOUT=*
//SYSUT2   DD SYSOUT=(B,SMTP)
//SYSUT1   DD *
HELO DOMAIN
MAIL FROM:<USERID@DOMAIN>
RECPT TO:<GARY@CHERLET.COM>
DATA
Mime-Version: 1.0
Content-Type: multipart/mixed; boundary="---- =_NextPart_000_01BD3BAF.A762FD80"

This message is in MIME format. Since your mail reader does not understand
this format, some or all of this message may not be legible.

------ =_NextPart_000_01BD3BAF.A762FD80
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit

Attached is the Desried Report in  html form

------ =_NextPart_000_01BD3BAF.A762FD80
Content-Type: application/octet-stream; name="report.html"
Content-Transfer-Encoding: base64

/*
//         DD DSN=&&BASE64,DISP=(SHR)

------ =_NextPart_000_01BD3BAF.A762FD80--
